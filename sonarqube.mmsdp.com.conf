upstream qa-web{
 server 192.168.127.64:9000;
}

server {
    if ($host = sonarqube.mmsdp.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


   listen 80;
   server_name sonarqube.mmsdp.com;
   rewrite ^(.*) https://$host$1 permanent;
 

}


 server {
  listen 443 ssl http2;
  server_name sonarqube.mmsdp.com;
  proxy_read_timeout 720s;
  proxy_connect_timeout 720s;
  proxy_send_timeout 720s;

  client_max_body_size 128M;
 # Add Headers for snipeit proxy mode
  proxy_set_header X-Forwarded-Host $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Real-IP $remote_addr;

  # add_header 'Access-Control-Allow-Origin' '*' always;
  # add_header 'Access-Control-Allow_Credentials' 'true';
  # add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
  # add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

 # SSL parameters

  ssl on;
    ssl_certificate /etc/letsencrypt/live/sonarqube.mmsdp.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/sonarqube.mmsdp.com/privkey.pem; # managed by Certbot
  ssl_session_timeout 1d;

   # Enable TLS versions (TLSv1.3 is required upcoming HTTP/3 QUIC).
  ssl_protocols TLSv1.2 TLSv1.3;

   # Enable TLSv1.3's 0-RTT. Use $ssl_early_data when reverse proxying to
   # prevent replay attacks.
   #
   # @see: https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_early_data
   #ssl_early_data on;

  #ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  #ssl_prefer_server_ciphers on;
  #ssl_session_cache shared:SSL:50m;
   # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
  #add_header Strict-Transport-Security max-age=15768000;
   # OCSP Stapling ---
   # fetch OCSP records from URL in ssl_certificate and cache them
  ssl_stapling on;
  ssl_stapling_verify on;

# log
 access_log /var/log/nginx/sonarqube.access.log;
 error_log /var/log/nginx/sonarqube.error.log;


 # Redirect requests to inventory backend server
 location / {
   proxy_redirect off;
   proxy_pass http://qa-web;
 }


 # common gzip
 gzip_types text/css text/scss text/plain text/xml application/xml application/json application/javascript;
 gzip on;

    # managed by Certbot

}
